name: Create Atom Component
on:
  issues:
    types: [opened]

jobs:
  issue_handler:
    if: contains(github.event.issue.labels.*.name, 'create-atom')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Print issue information
        run: |
          echo "Issue title: ${{ github.event.issue.title }}"
          echo "Issue body: ${{ github.event.issue.body }}"
          echo "Issue author: ${{ github.event.issue.user.login }}"
      
      - name: Call API and update file
        id: api_call
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          ESCAPED_ISSUE_BODY=$(echo "${{ github.event.issue.body }}" | awk '{printf "%s\\n", $0}')
          RESPONSE=$(curl --request POST "https://api.openai.com/v1/chat/completions"
            -H "Authorization: Bearer ${{ env.OPENAI_API_KEY }}"
            -H "Content-Type: application/json" \
            -D '{
              "model": "gpt-3.5-turbo",
              "messages": [{"role":"system","content":"You are a react component generator I will feed you a markdown file that contains a component name and description your job is to create a nextjs component using typescript and tailwind do not add any additional libraries or dependencies. Remember if you import useState, useEffect, or useRef you must prefix the file with \"use client\". Your response should only have 1 tsx code block which is the implementation of the component. Do not wrap the code in anything."},{"role": "user", "content": "$ESCAPED_ISSUE_BODY"}]
            }' \
            --fail)
          echo "::set-output name=response::$RESPONSE"
     
      - name: Create and switch to new branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b issue-${{ github.event.issue.number }}-update

      - name: Update file with API response
        run: |
          echo "${{ steps.api_call.outputs.response }}" > src/components/atoms/Search.tsx
          git add .
          git commit -m "Update file with API response"

      - name: Push changes to the new branch
        run: git push origin issue-${{ github.event.issue.number }}-update

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GH_API_KEY }}
          title: "Update file with API response for issue #${{ github.event.issue.number }}"
          body: "This PR updates the file with the API response for issue #${{ github.event.issue.number }}."
          branch: issue-${{ github.event.issue.number }}-update
